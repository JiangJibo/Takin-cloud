/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'io.shulie.takin.cloud.java-conventions'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}
jar {
    enabled = false
}

String targetPath = "../build"
String sourcePath = "./build/libs"

def clear = tasks.register('clear-jar') {
    println("清理文件开始")
    delete(sourcePath)
    delete(targetPath)
    println("清理文件完成")
}
def copy = tasks.register('copy-jar') {
    doLast {
        copy {
            println("拷贝文件开始")
            from(sourcePath)
            include('*.jar')
            into(targetPath)
            rename('^.+$', 'takin-cloud-app-' + project.version + '.jar')
            println("拷贝文件完成")
        }
    }
}

build.dependsOn(clear)
build.finalizedBy(copy)

processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
}

dependencies {
    // 项目内依赖
    implementation project(':model')
    implementation project(':constant')
    // lombok
    compileOnly libs.lombok
    annotationProcessor libs.lombok
    // spring-boot
    implementation libs.spring.boot.test
    implementation libs.spring.boot.starter.web
    annotationProcessor libs.spring.boot.configuration.processor
    // redis
    implementation libs.spring.boot.redisson
    // mysql
    implementation libs.bundles.mysql
    // swagger
    implementation libs.spring.doc
    // 其它
    implementation libs.dom4j
    implementation libs.hutool
    implementation libs.influxdb
    implementation 'com.alibaba:fastjson:1.2.79'
    implementation 'com.thoughtworks.xstream:xstream:1.4.19'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'commons-io:commons-io:2.7'

    //JmeterLib
    implementation 'org.beanshell:bsh-core:2.0b4'
    implementation 'com.google.guava:guava:30.1-jre'
    implementation fileTree(dir: 'src/main/resources/jmeter/lib', includes: ['*.jar'])
    implementation fileTree(dir: 'src/main/resources/jmeter/lib/ext', includes: ['*.jar'])
    implementation fileTree(dir: 'src/main/resources/jmeter/lib/plugins', includes: ['*.jar']).exclude {details ->
        (!details.file.canonicalPath.contains('slf4j') && !details.file.canonicalPath.contains('gson'))}

    //Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.6'
}


test {
    useJUnitPlatform()
}

description = 'app'
